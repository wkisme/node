from django.shortcuts import render
from  testmodel.models import Node
from ClusterShell.NodeSet import NodeSet

def runoob(request):
    context = {}
    context['hello'] = 'Hello World'
    return render(request, 'runoob.html', context)

def nodes(request):

    # nodes = Node.objects.all()[:10]
    # nodes = Node.objects.filter(name__contains='cn0')
    # nodes = Node.objects.filter(name__gt='cn0').order_by('name')
    # nodes = Node.objects.order_by('cab')
    # nodes = Node.objects.filter(cab__in=[64, 65, 66, 67], heter_linpack=1, heter_dgemm=1, heter_stream=1)
    # nodes = Node.objects.filter(cab__in=request.POST['cab'], homo_linpack=0)
    nodes = Node.objects.filter(cab__in=[57,58,59], heter_linpack=1, heter_dgemm=1, heter_stream=1)


    aggre_nodes = []
    context_list = []
    for node in nodes:
        aggre_nodes.append(node.name)

        context = {}
        context['name'] = node.name
        context['memtest'] = node.memtest
        context['homo_linpack'] = node.homo_linpack
        context['heter_linpack'] = node.heter_linpack
        context['heter_dgemm'] = node.heter_dgemm
        context['heter_stream'] = node.heter_stream
        context['change_time'] = node.change_time
        context['cab'] = node.cab
        context_list.append(context)
    print(context_list)
    aggre_nodes = ','.join(aggre_nodes)
    aggre_nodes = NodeSet(aggre_nodes)  # NodeSet input type need to be string
    print("\033[0;34m------------------------\033[0m")
    print("\033[0;34m{}  {} ({})\033[0m".format('aggre_nodes:', aggre_nodes, len(aggre_nodes)))
    print("\033[0;34m------------------------\033[0m")

    return render(request, 'nodes.html', {'context_list': context_list})


def AddNodes(request):

    # zhangwenze column(1,2,3) stream dgemm heter_linpack
    # AddNode

    #heter_linpack
    nodes = 'cn[20480-20706,20708-20953,20955-21228,21230-21895,21897-21951,21960-22239,22248-22415,22424-22749,22751-23991,23993-24240,24242-24340,24342-24777,24779-24907,24912-24947,24949-24951,24953-25751,25753-25755,25760-25945,25947-26114,26116-26381,26383-26389,26391-26563,26568-26848,26850-27007,27016-27063,27080-27087,27096-27179,27181-27314,27316-27351,27353,27356,27360-27384,27386-27412,27414-27640,27642,27645-27655,27664-27725,27727-28004,28006-28060,28062-28159,28168-28471,28480-29231,29233-29495,29504-29621,29696-30607,30609-31219,31221-31354,31356-31778,31780-31836,31838-31883,31885-31902,31904-31925,31927-31930,31932-31948,31950-31959,31963,31966,31968,31970-31972,31977-31978,31981-31982,31984-31985,31987-31988,31990-32013,32015-32029,32031-32081,32083-32090,32092-32209,32211-32255,32257-32260,32262,32265,32270-32274,32279-32288,32290-32300,32302,32304-32312,32314-32349,32351-32404,32406-32437,32439-32453,32456-32487,32489-32513,32515-32572,32574-32583,32585-32616,32618-32649,32651-32653,32655-32657,32659-32683,32685-32726,32728-32733,32735-32736,32768-33028,33030-33053,33055-33143,33148,33150-33783,33785-33799,33801-33818,33820-33879,33881,33883,33885,33887-33888,33892-33922,33924-33976,33978-34007,34009-34130,34132-34137,34139-34141,34145,34148-34150,34152,34154,34156-34167,34170,34174,34176-34240,34242-34244,34247-34249,34251-34263,34265-34287,34289-34308,34310,34312-34338,34340-34359,34361-34378,34380-34383,34385-34388,34390-34397,34399-34403,34405-34408,34410-34418,34420-34422,34424-34432,34434-34448,34450-34468,34470-34480,34482-34484,34486-34494,34496-34504,34506,34508,34510-34512,34514-34528,34530-34534,34536-34546,34548-34552,34556,34559-34563,34565-34577,34579-34583,34586-34594,34597-34607,34610-34615,34617-34629,34631-34634,34637,34639-34640,34642,34644-34645,34647-34650,34652,34654-34657,34659-34662,34664-34667,34671-34674,34677-34680,34683-34686,34688-34689,34692,34694-34699,34703-34704,34706,34708-34709,34712-34714,34716-34723,34726-34727,34729-34730,34733,34738-34740,34747,34749,34751-34753,34755-34758,34760,34763-34765,34767,34770,34772,34774,34776-34779,34783,34786-34788,34791-34793,34795-34796,34798,34800-34801,34803-34805,34807-34808,34811-34813,34816-34823,34872-34883,34885-34887,34904-35031,35040-35079,35088-35095,35152-35195,35197-35223,35240-35264,35266-35271,35280-35287,35312-35319,35328-35351,35400-35434,35436-35438,35440,35442-35447,35451-35463,35488-35495,35504-35519,35544,35552-35553,35560,35568-35569,35576-35583,35616-35623,35632-35647,35672,35674-35676,35679-35795,35808-35823,35832-35880,35882,35888-35939,35941-36275,36277,36279-36287,36291-36292,36296,36299,36302-36305,36307-36344,36446,36864-36951,36955,36959-36961,36966-36967,36969-36972,36984,36986-37211,37214,37216,37218,37220,37222-37228,37230,37232-37234,37236,37238,37240-37242,37244,37248-37359,37361,37366,37369,37371,37374,37376-37409,37411-37412,37414-37464,37466-37467,37470-37475,37477-37482,37485-37491,37494-37496,37498-37500,37502,37504-37528,37530-37592,37596,37598-37602,37607,37610-37611,37613-37615,37618-37619,37621-37626,37628,37632-37722,37726,37728,37731-37735,37737,37739,37744-37778,37780-37782,37784-37785,37788,37790,37794,37796,37798-37799,37802,37804-37806,37808-37809,37814-37815,37817-37820,37822,37824-37825,37827,37831-37833,37839,37841,37845,37848,37850,37855-37857,37859-37866,37868-37869,37871-37872,37874-37875,37877-37880,37884,37886,37888,37890,37892-37893,37895-37896,37899,37901-37903,37907,37911,37913,37915-37919,37921,37924-37925,37927-37933,37936,37938,37940-37943,37947-37948,37950-37953,37957,37959-37960,37962,37964,37967,37969-37970,37972-37978,37980,37984,37988-37991,37993,37996,37998,38001,38005-38006,38009,38011-38013,38016-38020,38024,38027-38031,38034-38035,38044-38052,38054-38055,38057,38061,38066,38069,38072-38073,38075-38078,38084,38088-38090,38092-38093,38096,38099-38100,38103-38105,38107-38115,38119-38121,38124-38128,38130-38137,38139-38145,38147-38150,38160-38164,38166-38173,38176-38180,38182-38183,38186,38189,38196-38199,38201-38203,38209,38211-38212,38218-38220,38223-38249,38252-38254,38256-38268,38270,38272-38282,38284,38286-38302,38307-38308,38310-38335,38338,38340-38345,38347-38351,38353-38354,38356-38360,38363-38365,38367-38370,38372-38376,38378,38382,38384-38388,38390-38395,38397,38399-38404,38407-38408,38410,38413-38418,38422-38424,38426-38431,38433-38434,38436,38440-38441,38443-38446,38448-38451,38460-38463,38468-38469,38471-38473,38477-38478,38481,38483-38485,38487,38489-38491,38496,38499-38500,38502-38503,38505,38514,38517,38519-38520,38524,38530-38536,38539-38540,38547,38551-38552,38556-38558,38560-38562,38564,38569,38572-38573,38575,38577,38579-38580,38582,38584-38591,38593,38595-38624,38627,38629,38631-38641,38644,38648-38649,38654-38660,38662,38664-38671,38674,38678,38680-38681,38683-38684,38688-38690,38694,38696,38699-38705,38712,38716,38718-38719,38725-38727,38729,38735,38737,38740,38742,38745,38748-38752,38754-38756,38758,38761,38765,38769-38771,38773,38777-38790,38793,38795-38808,38810-38812,38817,38819,38821,38824-38825,38827,38830,38832-38833,38836,38838-38841,38843-38848,38851-38855,38859-38864,38866,38868-38874,38876-38879,38881-38883,38887,38891,38893,38895,38897-38898,38900,38902-38903,38905-38906,38908-38911,38913-38914,38918-38920,38922-38923,38926-38928,38931,38936,38940,38942-38944,38946,38948-38952,38954,38957-38958,38960-38962,38964-38977,38980-38985,38988,38990,38993-38994,38996-39019,39022,39024-39027,39029-39030,39032,39035,39037,39039-39043,39047,39053-39054,39056,39058,39061,39064,39067,39069,39075-39083,39085,39088-39090,39093,39096,39098,39100-39101,39105-39112,39116,39119,39121-39129,39132-39135,39137-39140,39145,39147-39152,39154,39156-39157,39159,39162-39163,39165,39167,39172,39174,39176-39181,39183-39192,39196-39201,39204,39209-39212,39217-39218,39221,39227-39228,39232-39233,39235,39237,39239-39240,39242,39245-39251,39256-39265,39268-39270,39272,39274,39277,39279-39283,39285-39287,39290,39292,39294,39297-39299,39302-39311,39313-39314,39316-39317,39319-39320,39322,39324-39327,39330,39332,39335-39343,39345,39348-39350,39352,39355,39357,39359-39361,39364-39365,39367-39375,39377-39380,39382-39384,39386-39399,39401,39405-39406,39412-39415,39417,39419,39422-39423,39429,39432-39435,39437,39440-39442,39445-39451,39455-39465,39467-39474,39476-39479,39482,39484-39485,39488-39495,39497-39498,39500,39502-39503,39506-39508,39511-39535,39537,39540-39541,39543-39544,39546-39548,39550-39551,39553,39555,39557,39561-39562,39566,39568-39569,39573,39575-39578,39580-39581,39584-39591,39593,39595-39597,39599,39603-39609,39611-39613,39615-39617,39620-39621,39626,39630,39633,39636-39640,39643-39644,39646,39648-39655,39658-39670,39673-39685,39687,39689-39715,39717-39718,39721-39723,39727-39733,39736,39738-39752,39754,39756,39758-39764,39766-39770,39772-39773,39775-39786,39789-39791,39793,39795,39798,39800-39811,39819-39821,39823,39826-39831,39833,39836-39840,39843-39847,39853,39855,39858,39863-39865,39867-39872,39876-39877,39879,39881,39883-39885,39887,39889-39891,39895-39896,39901-39903,39910-39915,39917-39919,39922-39923,39926-39953,39955-39956,39958,39960,39963,39969,39971-39974,39976-39977,39980-39984,39989-39992,39994-39995,39997-39999,40002-40013,40015,40019,40025,40027-40031,40033-40040,40042-40046,40048,40051-40052,40054-40055,40058-40059,40061-40066,40068,40070,40074,40077,40083,40085,40092-40096,40100-40101,40104-40114,40116-40117,40122,40124,40126-40127,40129,40131-40136,40138-40144,40146,40148-40151,40156,40159-40160,40162,40165-40166,40171-40172,40175-40179,40183,40185,40187-40191,40193,40196-40200,40202-40207,40209-40210,40215,40217-40223,40225-40226,40228,40230,40232,40234,40236-40238,40240-40241,40244,40249-40255,40258,40261,40265,40268,40270-40272,40274,40276-40279,40281,40284,40286-40288,40296,40298-40300,40302,40304-40316,40318,40320-40322,40325,40329,40332-40333,40337-40338,40341,40343-40344,40346,40349-40352,40357-40363,40365-40407,40409,40411-40412,40415,40418,40420-40422,40425,40427,40430-40431,40433-40436,40438,40440,40442,40444-40445,40448,40451-40453,40455-40456,40460-40467,40471-40474,40477,40479,40481,40485,40487-40492,40496,40498,40501,40503,40505-40509,40514,40516,40518,40521-40528,40530,40533-40539,40541-40543,40546,40548-40551,40553,40558,40561,40563-40564,40566,40572-40576,40578,40580-40625,40627-40679,40681,40684,40686,40689-40694,40696,40698-40699,40702-40703,40706,40708-40717,40720-40728,40731-40736,40743-40744,40748,40750,40752-40754,40758,40760,40762-40763,40765,40768-40771,40773-40775,40777,40779-40784,40789-40790,40795,40797,40799-40801,40804-40807,40810,40813-40817,40820,40824-40827,40830-40894,40896-40927,40931-40935,40937,40939-40940,40942-40947,40949-40950,40954-40955,40957,40959]'
    nodes = NodeSet(nodes)

    for node in nodes:
        a = Node.objects.get(name=node)
        a.heter_linpack = '1'
        print(node.split('cn'))
        a.cab = str(int((int(node.split('cn')[-1]) / 1024)))  # compute cab num through node's name
        a.save()


    # AddNode
    nodes = Node.objects.order_by('-change_time')[:10] # get the last ten elements to confirm add successfully.



    context_list = []
    for node in nodes:
        context = {}
        context['name'] = node.name
        context['memtest'] = node.memtest
        context['homo_linpack'] = node.homo_linpack
        context['heter_linpack'] = node.heter_linpack
        context['heter_dgemm'] = node.heter_dgemm
        context['heter_stream'] = node.heter_stream
        context['change_time'] = node.change_time
        context['cab'] = node.cab
        context_list.append(context)
    print(context_list)
    return render(request, 'AddNodes.html', {'context_list': context_list})



